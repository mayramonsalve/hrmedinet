<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ClimateScale" xml:space="preserve">
    <value>Climate scale</value>
  </data>
  <data name="ClimateScaleRequired" xml:space="preserve">
    <value>The Climate scale field is required.</value>
  </data>
  <data name="Code" xml:space="preserve">
    <value>Code</value>
  </data>
  <data name="ConfidenceLevel" xml:space="preserve">
    <value>Confidence level</value>
  </data>
  <data name="Disordered" xml:space="preserve">
    <value>Disordered questions</value>
  </data>
  <data name="DisorderedRequired" xml:space="preserve">
    <value>The Disordered questions field is required.</value>
  </data>
  <data name="EndDate" xml:space="preserve">
    <value>End date</value>
  </data>
  <data name="EndDateRequired" xml:space="preserve">
    <value>The End date field is required.</value>
  </data>
  <data name="EvaluationNumber" xml:space="preserve">
    <value>Evaluation number</value>
  </data>
  <data name="EvaluationNumberInvalid" xml:space="preserve">
    <value>The Evaluation number field must be a whole number greater than zero.</value>
  </data>
  <data name="EvaluationNumberRequired" xml:space="preserve">
    <value>The Evaluation number field is required.</value>
  </data>
  <data name="GroupByCategories" xml:space="preserve">
    <value>Group by categories</value>
  </data>
  <data name="GroupByCategoriesRequired" xml:space="preserve">
    <value>The Group by categories field is required.</value>
  </data>
  <data name="MinimumPeople" xml:space="preserve">
    <value>Minimum people</value>
  </data>
  <data name="MinimumPeopleInvalid" xml:space="preserve">
    <value>The Minimum people field must be a whole number greater than 0.</value>
  </data>
  <data name="MinimumPeopleRequired" xml:space="preserve">
    <value>The Minimum people field is required.</value>
  </data>
  <data name="NumberOfEmployees" xml:space="preserve">
    <value>Number of employees</value>
  </data>
  <data name="OneQuestionnaire" xml:space="preserve">
    <value>One questionnaire</value>
  </data>
  <data name="OneQuestionnaireRequired" xml:space="preserve">
    <value>The One questionnaire field is required.</value>
  </data>
  <data name="PreviousTest" xml:space="preserve">
    <value>Previous test</value>
  </data>
  <data name="Questionnaire" xml:space="preserve">
    <value>Questionnaire</value>
  </data>
  <data name="QuestionnaireRequired" xml:space="preserve">
    <value>The Questionnaire field is required.</value>
  </data>
  <data name="Questionnaires" xml:space="preserve">
    <value>Questionnaires</value>
  </data>
  <data name="RecordsPerPage" xml:space="preserve">
    <value>Records per page</value>
  </data>
  <data name="RecordsPerPageInvalid" xml:space="preserve">
    <value>The Records per page field must be a whole number greater than 0.</value>
  </data>
  <data name="RecordsPerPageRequired" xml:space="preserve">
    <value>The Records per page field is required.</value>
  </data>
  <data name="ResultBasedOn100" xml:space="preserve">
    <value>Result based on 100</value>
  </data>
  <data name="ResultBasedOn100Required" xml:space="preserve">
    <value>The Result based on 100 field is required.</value>
  </data>
  <data name="StandardError" xml:space="preserve">
    <value>Standard error</value>
  </data>
  <data name="StartDate" xml:space="preserve">
    <value>Start date</value>
  </data>
  <data name="StartDateRequired" xml:space="preserve">
    <value>The Start date field is required.</value>
  </data>
  <data name="Text" xml:space="preserve">
    <value>Text</value>
  </data>
  <data name="TextRequired" xml:space="preserve">
    <value>The Text field is required.</value>
  </data>
  <data name="Weighted" xml:space="preserve">
    <value>Weighted categories</value>
  </data>
  <data name="WeightedRequired" xml:space="preserve">
    <value>The Weighted categories field is required.</value>
  </data>
</root>